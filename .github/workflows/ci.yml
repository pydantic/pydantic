name: CI

on:
  push:
    branches:
      - master
    tags:
      - '**'
  pull_request: {}

jobs:
  test:
    name: test py${{ matrix.python-version }} on ubuntu
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]
    env:
      PYTHON: ${{ matrix.python-version }}
      OS: ubuntu

    steps:
    - uses: actions/checkout@v2

    - name: set up python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: install dependencies
      run: |
        make install
        pip freeze

    - name: lint
      run: make lint

    - name: mypy
      run: make mypy

    - name: make history
      run: python3 ./changes/make_history.py

    - name: check dist
      run: make check-dist

    - name: compile
      run: |
        make build-cython-trace
        python -c "import sys, pydantic; print('compiled:', pydantic.compiled); sys.exit(0 if pydantic.compiled else 1)"
        ls -alh
        ls -alh pydantic/

    - name: test compiled and deps
      run: |
        make test
        ls -lha
        COMPILED=yes DEPS=yes bash <(curl -s https://codecov.io/bash) -e COMPILED,DEPS,PYTHON,OS
        rm .coverage

    - name: uninstall deps
      run: pip uninstall -y cython email-validator typing-extensions devtools python-dotenv

    - name: test compiled without deps
      run: |
        make test
        ls -lha
        COMPILED=yes DEPS=no bash <(curl -s https://codecov.io/bash) -e COMPILED,DEPS,PYTHON,OS
        rm .coverage

    - name: remove compiled binaries
      run: |
        rm pydantic/*.so pydantic/*.c
        ls -alh
        ls -alh pydantic/

    - name: test uncompiled without deps
      run: |
        make test
        ls -lha
        COMPILED=no DEPS=no bash <(curl -s https://codecov.io/bash) -e COMPILED,DEPS,PYTHON,OS
        rm .coverage

  windows-mac-test:
    name: test py${{ matrix.python-version }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos, windows]
        python-version: [3.6, 3.7, 3.8]
    env:
      PYTHON: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}
      COMPILED: 'no'
      DEPS: 'yes'

    runs-on: ${{ format('{0}-latest', matrix.os) }}
    steps:
    - uses: actions/checkout@v2

    - name: set up python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: install
      run: make install

    - name: lint
      run: make lint

    - name: mypy
      run: make mypy

    - name: test
      run: |
        make test
        coverage xml

    - uses: samuelcolvin/codecov-action@env-vars
      with:
        file: ./coverage.xml
        env_vars: COMPILED,DEPS,PYTHON,OS
