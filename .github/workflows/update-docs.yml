name: Update Docs

on:
  push:
    branches:
      - main
      - docs-update
    tags:
      - '**'

env:
  COLUMNS: 150
  PDM_DEPS: 'urllib3<2'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: pdm-project/setup-pdm@v3
        with:
          python-version: '3.11'
          cache: true
          version: '2.7.0'

      - name: install
        run: pdm install -G linting -G email

      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --all-files --verbose

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: pdm-project/setup-pdm@v3
        with:
          python-version: '3.11'
          cache: true
          version: '2.7.0'

      - name: install deps
        run: pdm install -G testing

      - run: pdm info && pdm list

      - run: 'pdm run python -c "import pydantic.version; print(pydantic.version.version_info())"'

      - run: make test

  publish:
    needs: [lint, test]
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: checkout docs-site
        uses: actions/checkout@v3
        with:
          ref: docs-site

      - name: checkout current branch
        uses: actions/checkout@v3

      - uses: pdm-project/setup-pdm@v3
        with:
          python-version: '3.10'
          cache: true
          version: 2.7.0

      - name: install
        run: |
          pdm install -G docs
          pdm run pip install https://files.scolvin.com/${MKDOCS_TOKEN}/mkdocs-material/mkdocs_material-9.1.5+insiders.4.32.4-py3-none-any.whl
        env:
          MKDOCS_TOKEN: ${{ secrets.MKDOCS_TOKEN }}

      - run: pdm run python -c 'import docs.plugins.main'

      - name: Set git credentials
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - run: pdm run mike deploy -b docs-site dev-v2 --push
        if: "github.ref == 'refs/heads/main'"

      - if: "github.ref == 'refs/heads/docs-update' || startsWith(github.ref, 'refs/tags/')"
        id: check-version
        uses: samuelcolvin/check-python-version@v4.1
        with:
          version_file_path: 'pydantic/version.py'
          skip_env_check: true

      - run: pdm run mike deploy -b docs-site ${{ steps.check-version.outputs.VERSION_MAJOR_MINOR }} latest --update-aliases --push
        if: "(github.ref == 'refs/heads/docs-update' || startsWith(github.ref, 'refs/tags/')) && !fromJSON(steps.check-version.outputs.IS_PRERELEASE)"
        env:
          PYDANTIC_VERSION: v${{ steps.check-version.outputs.VERSION }}
