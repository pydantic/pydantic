# This workflow is a daily cron job, inspired by:
# https://github.com/python/typing_extensions/blob/main/.github/workflows/third_party.yml.
# Running the tests of various third-party libraries that use Pydantic. This helps us spot regressions early, and helps
# flag when third-party libraries are making incorrect assumptions that might cause them to break when we cut a new release.
name: Airflow - experiment third-party tests

on:
  schedule:
    - cron: '0 12 * * *' # Daily at midnight UTC
  pull_request:
    branches: [main]
  # Can be manually triggered from the Actions tab, if needed:
  workflow_dispatch:
  push:
    branches: [ci/third-party-airflow]

permissions:
  contents: read

env:
  # https://github.com/pytest-dev/pytest/issues/7443#issuecomment-656642591:
  FORCE_COLOR: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-info:
    name: "Build info"
    # At build-info stage we do not yet have outputs so we need to hard-code the runs-on to public runners
    runs-on: ["ubuntu-22.04"]
    env:
      GITHUB_CONTEXT: ${{ toJson(github) }}
    outputs:
      runs-on-as-json-public: ${{ steps.selective-checks.outputs.runs-on-as-json-public }}

    steps:
      - name: "Cleanup repo"
        shell: bash
        run: docker run -v "${GITHUB_WORKSPACE}:/workspace" -u 0:0 bash -c "rm -rf /workspace/*"

      - name: "Checkout airflow"
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          repository: apache/airflow

      - name: "Cleanup docker"
        run: ./scripts/ci/cleanup_docker.sh

      - name: Fetch incoming commit with its parent
        uses: actions/checkout@v4
        with:
          repository: apache/airflow
          fetch-depth: 2
          persist-credentials: false

      - name: "Install Breeze"
        uses: ./.github/actions/breeze

      - name: "Get information about the Workflow"
        id: source-run-info
        run: breeze ci get-workflow-info 2>> ${GITHUB_OUTPUT}
        env:
          SKIP_BREEZE_SELF_UPGRADE_CHECK: "true"

      - name: Get current commit hash and branch name
        id: get-ref
        run: |
          echo "commit_hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Selective checks
        id: selective-checks
        env:
          PR_LABELS: "${{ steps.source-run-info.outputs.pr-labels }}"
          COMMIT_REF: "${{ steps.get-ref.outputs.commit_hash }}"
          VERBOSE: "false"
        run: breeze ci selective-check 2>> ${GITHUB_OUTPUT}

      - name: env
        run: printenv
        env:
          PR_LABELS: ${{ steps.source-run-info.outputs.pr-labels }}
          GITHUB_CONTEXT: ${{ toJson(github) }}

  test-airflow:
    name: Test Airflow (main branch) on Python ${{ matrix.python-version }}
    # If 'schedule' was the trigger, don't run it on contributors' forks
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'push' ||
      (github.event_name == 'schedule' && github.repository == 'pydantic/pydantic') ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'third-party-tests'))

    needs: [build-info]

    runs-on: ${{ fromJSON(needs.build-info.outputs.runs-on-as-json-public) }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    steps:
    - name: "Cleanup repo"
      shell: bash
      run: docker run -v "${GITHUB_WORKSPACE}:/workspace" -u 0:0 bash -c "rm -rf /workspace/*"

    - name: Checkout Airflow
      uses: actions/checkout@v4
      with:
        repository: apache/airflow
        # Need to fetch all history for selective checks tests
        fetch-depth: 0
        persist-credentials: false

    - name: "Cleanup docker"
      run: ./scripts/ci/cleanup_docker.sh

    - name: Checkout Pydantic
      uses: actions/checkout@v4
      with:
        path: pydantic-latest

    - uses: actions/setup-python@v5
      with:
        python-version: "${{ matrix.python-version }}"
        cache: 'pip'
        cache-dependency-path: ./dev/breeze/pyproject.toml

    - name: Install breeze airflow
      run: pip install --editable ./dev/breeze/

    - name: Install pydantic
      run: pip install ./pydantic-latest

    - name: List installed dependencies
      run: pip list

    - name: Run basic test
      run: python -m pytest -n auto --color=yes
      working-directory: ./dev/breeze/

  create-issue-on-failure:
    name: Create an issue if tests failed
    runs-on: ubuntu-latest
    needs:
      - test-airflow
    if: |
      github.repository == 'pydantic/pydantic' &&
      github.event_name == 'schedule' &&
      needs.test-airflow.result == 'failure'
    permissions:
      issues: write
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.create({
              owner: 'pydantic',
              repo: 'pydantic',
              title: `Third-party tests failed on ${new Date().toDateString()}`,
              body: 'Run listed here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}',
            })
