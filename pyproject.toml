[build-system]
requires = ['maturin>=0.15,<0.16', 'typing_extensions']
build-backend = 'maturin'

[project]
name = 'pydantic_core'
requires-python = '>=3.7'
authors = [
    {name = 'Samuel Colvin', email = 's@muelcolvin.com'}
]
classifiers = [
    'Development Status :: 3 - Alpha',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Rust',
    'Framework :: Pydantic',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'License :: OSI Approved :: MIT License',
    'Operating System :: POSIX :: Linux',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: MacOS',
    'Typing :: Typed',
]
dependencies = [
    'typing_extensions; python_version < "3.11.0"'
]
dynamic = [
    'description',
    'license',
    'readme',
    'version'
]

[project.urls]
Homepage = 'https://github.com/pydantic/pydantic-core'
Funding = 'https://github.com/sponsors/samuelcolvin'
Source = 'https://github.com/pydantic/pydantic-core'

[tool.maturin]
module-name = "pydantic_core._pydantic_core"
bindings = 'pyo3'
features = ["pyo3/extension-module"]

[tool.ruff]
line-length = 120
extend-select = ['Q', 'RUF100', 'C90', 'I']
flake8-quotes = {inline-quotes = 'single', multiline-quotes = 'double'}
mccabe = { max-complexity = 13 }
isort = { known-first-party = ['pydantic-core', 'tests'] }

[tool.pytest.ini_options]
testpaths = 'tests'
log_format = '%(name)s %(levelname)s: %(message)s'
filterwarnings = 'error'
timeout = 30
xfail_strict = true
# min, max, mean, stddev, median, iqr, outliers, ops, rounds, iterations
addopts = [
    '--benchmark-columns', 'min,mean,stddev,outliers,rounds,iterations',
    '--benchmark-group-by', 'group',
    '--benchmark-warmup', 'on',
    '--benchmark-disable',  # this is enable by `make benchmark` when you actually want to run benchmarks
]

[tool.coverage.run]
source = ['pydantic_core']
branch = true

[tool.coverage.report]
precision = 2
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    '@overload',
]

[tool.black]
color = true
line-length = 120
target-version = ['py37', 'py38', 'py39', 'py310']
skip-string-normalization = true
skip-magic-trailing-comma = true

# configuring https://github.com/pydantic/hooky
[tool.hooky]
reviewers = ['samuelcolvin', 'adriangb', 'dmontagu']
require_change_file = false

[tool.pyright]
include = ['pydantic_core', 'tests/test_typing.py']
reportUnnecessaryTypeIgnoreComment = true
